# Generated by Django 4.2.11 on 2025-10-20 16:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="GroupMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("admin", "Admin"), ("member", "Member")],
                        default="member",
                        max_length=10,
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "has_travel_preferences",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the member has added their travel preferences",
                    ),
                ),
            ],
            options={
                "verbose_name": "Group Member",
                "verbose_name_plural": "Group Members",
                "ordering": ["joined_at"],
            },
        ),
        migrations.CreateModel(
            name="TravelPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "budget_range",
                    models.CharField(
                        blank=True,
                        help_text="Budget range (e.g., $500-1000)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "accommodation_preference",
                    models.CharField(
                        blank=True,
                        help_text="Hotel, Airbnb, Hostel, etc.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "activity_preferences",
                    models.TextField(
                        blank=True, help_text="Preferred activities", null=True
                    ),
                ),
                (
                    "dietary_restrictions",
                    models.TextField(
                        blank=True,
                        help_text="Any dietary restrictions or preferences",
                        null=True,
                    ),
                ),
                (
                    "accessibility_needs",
                    models.TextField(
                        blank=True,
                        help_text="Any accessibility requirements",
                        null=True,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes or preferences",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "member",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="travel_preferences",
                        to="travel_groups.groupmember",
                    ),
                ),
            ],
            options={
                "verbose_name": "Travel Preference",
                "verbose_name_plural": "Travel Preferences",
            },
        ),
        migrations.CreateModel(
            name="TravelGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                ("destination", models.CharField(max_length=200)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "max_members",
                    models.PositiveIntegerField(
                        default=10,
                        help_text="Maximum number of members allowed in the group",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Travel Group",
                "verbose_name_plural": "Travel Groups",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="groupmember",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="members",
                to="travel_groups.travelgroup",
            ),
        ),
        migrations.AddField(
            model_name="groupmember",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="group_memberships",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="groupmember",
            unique_together={("group", "user")},
        ),
        migrations.CreateModel(
            name="GroupItinerary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_approved",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the itinerary is approved by group admins",
                    ),
                ),
                (
                    "added_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_itineraries",
                        to="travel_groups.travelgroup",
                    ),
                ),
                (
                    "itinerary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_links",
                        to="accounts.itinerary",
                    ),
                ),
            ],
            options={
                "verbose_name": "Group Itinerary",
                "verbose_name_plural": "Group Itineraries",
                "ordering": ["-added_at"],
                "unique_together": {("group", "itinerary")},
            },
        ),
    ]
